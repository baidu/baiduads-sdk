/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.imageintelligent.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ImageSize
 */
@JsonPropertyOrder({
  ImageSize.JSON_PROPERTY_HEIGHT,
  ImageSize.JSON_PROPERTY_WIDTH,
  ImageSize.JSON_PROPERTY_OFFSET_X,
  ImageSize.JSON_PROPERTY_OFFSET_Y,
  ImageSize.JSON_PROPERTY_SIZE,
  ImageSize.JSON_PROPERTY_OFFSET_HEIGHT,
  ImageSize.JSON_PROPERTY_OFFSET_WIDTH
})
@JsonTypeName("ImageSize")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImageSize {
  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Integer height;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private Integer width;

  public static final String JSON_PROPERTY_OFFSET_X = "offsetX";
  private Integer offsetX;

  public static final String JSON_PROPERTY_OFFSET_Y = "offsetY";
  private Integer offsetY;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Integer size;

  public static final String JSON_PROPERTY_OFFSET_HEIGHT = "offsetHeight";
  private Integer offsetHeight;

  public static final String JSON_PROPERTY_OFFSET_WIDTH = "offsetWidth";
  private Integer offsetWidth;

  public ImageSize() { 
  }

  public ImageSize height(Integer height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(Integer height) {
    this.height = height;
  }


  public ImageSize width(Integer width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(Integer width) {
    this.width = width;
  }


  public ImageSize offsetX(Integer offsetX) {
    
    this.offsetX = offsetX;
    return this;
  }

   /**
   * Get offsetX
   * @return offsetX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OFFSET_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffsetX() {
    return offsetX;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffsetX(Integer offsetX) {
    this.offsetX = offsetX;
  }


  public ImageSize offsetY(Integer offsetY) {
    
    this.offsetY = offsetY;
    return this;
  }

   /**
   * Get offsetY
   * @return offsetY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OFFSET_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffsetY() {
    return offsetY;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffsetY(Integer offsetY) {
    this.offsetY = offsetY;
  }


  public ImageSize size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Integer size) {
    this.size = size;
  }


  public ImageSize offsetHeight(Integer offsetHeight) {
    
    this.offsetHeight = offsetHeight;
    return this;
  }

   /**
   * Get offsetHeight
   * @return offsetHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OFFSET_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffsetHeight() {
    return offsetHeight;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffsetHeight(Integer offsetHeight) {
    this.offsetHeight = offsetHeight;
  }


  public ImageSize offsetWidth(Integer offsetWidth) {
    
    this.offsetWidth = offsetWidth;
    return this;
  }

   /**
   * Get offsetWidth
   * @return offsetWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OFFSET_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffsetWidth() {
    return offsetWidth;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffsetWidth(Integer offsetWidth) {
    this.offsetWidth = offsetWidth;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageSize imageSize = (ImageSize) o;
    return Objects.equals(this.height, imageSize.height) &&
        Objects.equals(this.width, imageSize.width) &&
        Objects.equals(this.offsetX, imageSize.offsetX) &&
        Objects.equals(this.offsetY, imageSize.offsetY) &&
        Objects.equals(this.size, imageSize.size) &&
        Objects.equals(this.offsetHeight, imageSize.offsetHeight) &&
        Objects.equals(this.offsetWidth, imageSize.offsetWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(height, width, offsetX, offsetY, size, offsetHeight, offsetWidth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageSize {\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    offsetX: ").append(toIndentedString(offsetX)).append("\n");
    sb.append("    offsetY: ").append(toIndentedString(offsetY)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    offsetHeight: ").append(toIndentedString(offsetHeight)).append("\n");
    sb.append("    offsetWidth: ").append(toIndentedString(offsetWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.materialbindmod.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.materialbindmod.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.materialbindmod.model.AddMaterialBindRequestWrapper;
import com.baidu.dev2.api.sdk.materialbindmod.model.AddMaterialBindResponseWrapper;
import com.baidu.dev2.api.sdk.materialbindmod.model.DeleteMaterialBindRequestWrapper;
import com.baidu.dev2.api.sdk.materialbindmod.model.DeleteMaterialBindResponseWrapper;
import com.baidu.dev2.api.sdk.materialbindmod.model.UpdateMaterialBindRequestWrapper;
import com.baidu.dev2.api.sdk.materialbindmod.model.UpdateMaterialBindResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MaterialBindModService {
  private ApiClient apiClient;

  public MaterialBindModService() {
    this(Configuration.getDefaultApiClient());
  }

  public MaterialBindModService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param addMaterialBindRequestWrapper  (required)
   * @return AddMaterialBindResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AddMaterialBindResponseWrapper addMaterialBind(AddMaterialBindRequestWrapper addMaterialBindRequestWrapper) throws ApiException {
    Object localVarPostBody = addMaterialBindRequestWrapper;
    
    // verify the required parameter 'addMaterialBindRequestWrapper' is set
    if (addMaterialBindRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'addMaterialBindRequestWrapper' when calling addMaterialBind");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/MaterialBindModService/addMaterialBind";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AddMaterialBindResponseWrapper> localVarReturnType = new TypeReference<AddMaterialBindResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deleteMaterialBindRequestWrapper  (required)
   * @return DeleteMaterialBindResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeleteMaterialBindResponseWrapper deleteMaterialBind(DeleteMaterialBindRequestWrapper deleteMaterialBindRequestWrapper) throws ApiException {
    Object localVarPostBody = deleteMaterialBindRequestWrapper;
    
    // verify the required parameter 'deleteMaterialBindRequestWrapper' is set
    if (deleteMaterialBindRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deleteMaterialBindRequestWrapper' when calling deleteMaterialBind");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/MaterialBindModService/deleteMaterialBind";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeleteMaterialBindResponseWrapper> localVarReturnType = new TypeReference<DeleteMaterialBindResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param updateMaterialBindRequestWrapper  (required)
   * @return UpdateMaterialBindResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public UpdateMaterialBindResponseWrapper updateMaterialBind(UpdateMaterialBindRequestWrapper updateMaterialBindRequestWrapper) throws ApiException {
    Object localVarPostBody = updateMaterialBindRequestWrapper;
    
    // verify the required parameter 'updateMaterialBindRequestWrapper' is set
    if (updateMaterialBindRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'updateMaterialBindRequestWrapper' when calling updateMaterialBind");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/MaterialBindModService/updateMaterialBind";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<UpdateMaterialBindResponseWrapper> localVarReturnType = new TypeReference<UpdateMaterialBindResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}

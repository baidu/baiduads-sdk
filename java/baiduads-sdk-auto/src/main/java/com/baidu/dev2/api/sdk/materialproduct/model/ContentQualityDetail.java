/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.materialproduct.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.materialproduct.model.QualityResult;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ContentQualityDetail
 */
@JsonPropertyOrder({
  ContentQualityDetail.JSON_PROPERTY_FIELD_FILL,
  ContentQualityDetail.JSON_PROPERTY_FIELD_REPEAT,
  ContentQualityDetail.JSON_PROPERTY_PICTURE_VISION,
  ContentQualityDetail.JSON_PROPERTY_TEXT_QUALITY
})
@JsonTypeName("ContentQualityDetail")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ContentQualityDetail {
  public static final String JSON_PROPERTY_FIELD_FILL = "fieldFill";
  private List<QualityResult> fieldFill = null;

  public static final String JSON_PROPERTY_FIELD_REPEAT = "fieldRepeat";
  private List<QualityResult> fieldRepeat = null;

  public static final String JSON_PROPERTY_PICTURE_VISION = "pictureVision";
  private List<QualityResult> pictureVision = null;

  public static final String JSON_PROPERTY_TEXT_QUALITY = "textQuality";
  private List<QualityResult> textQuality = null;

  public ContentQualityDetail() { 
  }

  public ContentQualityDetail fieldFill(List<QualityResult> fieldFill) {
    
    this.fieldFill = fieldFill;
    return this;
  }

  public ContentQualityDetail addFieldFillItem(QualityResult fieldFillItem) {
    if (this.fieldFill == null) {
      this.fieldFill = new ArrayList<>();
    }
    this.fieldFill.add(fieldFillItem);
    return this;
  }

   /**
   * Get fieldFill
   * @return fieldFill
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIELD_FILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<QualityResult> getFieldFill() {
    return fieldFill;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_FILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldFill(List<QualityResult> fieldFill) {
    this.fieldFill = fieldFill;
  }


  public ContentQualityDetail fieldRepeat(List<QualityResult> fieldRepeat) {
    
    this.fieldRepeat = fieldRepeat;
    return this;
  }

  public ContentQualityDetail addFieldRepeatItem(QualityResult fieldRepeatItem) {
    if (this.fieldRepeat == null) {
      this.fieldRepeat = new ArrayList<>();
    }
    this.fieldRepeat.add(fieldRepeatItem);
    return this;
  }

   /**
   * Get fieldRepeat
   * @return fieldRepeat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIELD_REPEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<QualityResult> getFieldRepeat() {
    return fieldRepeat;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_REPEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldRepeat(List<QualityResult> fieldRepeat) {
    this.fieldRepeat = fieldRepeat;
  }


  public ContentQualityDetail pictureVision(List<QualityResult> pictureVision) {
    
    this.pictureVision = pictureVision;
    return this;
  }

  public ContentQualityDetail addPictureVisionItem(QualityResult pictureVisionItem) {
    if (this.pictureVision == null) {
      this.pictureVision = new ArrayList<>();
    }
    this.pictureVision.add(pictureVisionItem);
    return this;
  }

   /**
   * Get pictureVision
   * @return pictureVision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PICTURE_VISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<QualityResult> getPictureVision() {
    return pictureVision;
  }


  @JsonProperty(JSON_PROPERTY_PICTURE_VISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPictureVision(List<QualityResult> pictureVision) {
    this.pictureVision = pictureVision;
  }


  public ContentQualityDetail textQuality(List<QualityResult> textQuality) {
    
    this.textQuality = textQuality;
    return this;
  }

  public ContentQualityDetail addTextQualityItem(QualityResult textQualityItem) {
    if (this.textQuality == null) {
      this.textQuality = new ArrayList<>();
    }
    this.textQuality.add(textQualityItem);
    return this;
  }

   /**
   * Get textQuality
   * @return textQuality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEXT_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<QualityResult> getTextQuality() {
    return textQuality;
  }


  @JsonProperty(JSON_PROPERTY_TEXT_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextQuality(List<QualityResult> textQuality) {
    this.textQuality = textQuality;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentQualityDetail contentQualityDetail = (ContentQualityDetail) o;
    return Objects.equals(this.fieldFill, contentQualityDetail.fieldFill) &&
        Objects.equals(this.fieldRepeat, contentQualityDetail.fieldRepeat) &&
        Objects.equals(this.pictureVision, contentQualityDetail.pictureVision) &&
        Objects.equals(this.textQuality, contentQualityDetail.textQuality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldFill, fieldRepeat, pictureVision, textQuality);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentQualityDetail {\n");
    sb.append("    fieldFill: ").append(toIndentedString(fieldFill)).append("\n");
    sb.append("    fieldRepeat: ").append(toIndentedString(fieldRepeat)).append("\n");
    sb.append("    pictureVision: ").append(toIndentedString(pictureVision)).append("\n");
    sb.append("    textQuality: ").append(toIndentedString(textQuality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.materialproduct.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.materialproduct.model.ProductImage;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProductEstateImagesDto
 */
@JsonPropertyOrder({
  ProductEstateImagesDto.JSON_PROPERTY_REAL_SCENE,
  ProductEstateImagesDto.JSON_PROPERTY_MATCHING,
  ProductEstateImagesDto.JSON_PROPERTY_PLANNING,
  ProductEstateImagesDto.JSON_PROPERTY_TRAFFIC,
  ProductEstateImagesDto.JSON_PROPERTY_CONSTRUCTION,
  ProductEstateImagesDto.JSON_PROPERTY_SAND_TABLE
})
@JsonTypeName("ProductEstateImagesDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ProductEstateImagesDto {
  public static final String JSON_PROPERTY_REAL_SCENE = "realScene";
  private ProductImage realScene;

  public static final String JSON_PROPERTY_MATCHING = "matching";
  private ProductImage matching;

  public static final String JSON_PROPERTY_PLANNING = "planning";
  private ProductImage planning;

  public static final String JSON_PROPERTY_TRAFFIC = "traffic";
  private ProductImage traffic;

  public static final String JSON_PROPERTY_CONSTRUCTION = "construction";
  private ProductImage construction;

  public static final String JSON_PROPERTY_SAND_TABLE = "sandTable";
  private ProductImage sandTable;

  public ProductEstateImagesDto() { 
  }

  public ProductEstateImagesDto realScene(ProductImage realScene) {
    
    this.realScene = realScene;
    return this;
  }

   /**
   * Get realScene
   * @return realScene
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REAL_SCENE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductImage getRealScene() {
    return realScene;
  }


  @JsonProperty(JSON_PROPERTY_REAL_SCENE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealScene(ProductImage realScene) {
    this.realScene = realScene;
  }


  public ProductEstateImagesDto matching(ProductImage matching) {
    
    this.matching = matching;
    return this;
  }

   /**
   * Get matching
   * @return matching
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MATCHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductImage getMatching() {
    return matching;
  }


  @JsonProperty(JSON_PROPERTY_MATCHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatching(ProductImage matching) {
    this.matching = matching;
  }


  public ProductEstateImagesDto planning(ProductImage planning) {
    
    this.planning = planning;
    return this;
  }

   /**
   * Get planning
   * @return planning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PLANNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductImage getPlanning() {
    return planning;
  }


  @JsonProperty(JSON_PROPERTY_PLANNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanning(ProductImage planning) {
    this.planning = planning;
  }


  public ProductEstateImagesDto traffic(ProductImage traffic) {
    
    this.traffic = traffic;
    return this;
  }

   /**
   * Get traffic
   * @return traffic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRAFFIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductImage getTraffic() {
    return traffic;
  }


  @JsonProperty(JSON_PROPERTY_TRAFFIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTraffic(ProductImage traffic) {
    this.traffic = traffic;
  }


  public ProductEstateImagesDto construction(ProductImage construction) {
    
    this.construction = construction;
    return this;
  }

   /**
   * Get construction
   * @return construction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONSTRUCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductImage getConstruction() {
    return construction;
  }


  @JsonProperty(JSON_PROPERTY_CONSTRUCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstruction(ProductImage construction) {
    this.construction = construction;
  }


  public ProductEstateImagesDto sandTable(ProductImage sandTable) {
    
    this.sandTable = sandTable;
    return this;
  }

   /**
   * Get sandTable
   * @return sandTable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SAND_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductImage getSandTable() {
    return sandTable;
  }


  @JsonProperty(JSON_PROPERTY_SAND_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSandTable(ProductImage sandTable) {
    this.sandTable = sandTable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductEstateImagesDto productEstateImagesDto = (ProductEstateImagesDto) o;
    return Objects.equals(this.realScene, productEstateImagesDto.realScene) &&
        Objects.equals(this.matching, productEstateImagesDto.matching) &&
        Objects.equals(this.planning, productEstateImagesDto.planning) &&
        Objects.equals(this.traffic, productEstateImagesDto.traffic) &&
        Objects.equals(this.construction, productEstateImagesDto.construction) &&
        Objects.equals(this.sandTable, productEstateImagesDto.sandTable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(realScene, matching, planning, traffic, construction, sandTable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductEstateImagesDto {\n");
    sb.append("    realScene: ").append(toIndentedString(realScene)).append("\n");
    sb.append("    matching: ").append(toIndentedString(matching)).append("\n");
    sb.append("    planning: ").append(toIndentedString(planning)).append("\n");
    sb.append("    traffic: ").append(toIndentedString(traffic)).append("\n");
    sb.append("    construction: ").append(toIndentedString(construction)).append("\n");
    sb.append("    sandTable: ").append(toIndentedString(sandTable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

